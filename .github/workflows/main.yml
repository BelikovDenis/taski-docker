name: Taski CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  tests:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip 
          pip install flake8==6.0.0 flake8-isort==6.0.0
          pip install -r ./backend/requirements.txt 

      - name: Run linting and tests
        run: |
          python -m flake8 backend/
          cd backend/
          python manage.py test

  build_and_push_to_docker_hub:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: ./backend/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/taski_backend:latest

      - name: Build and push frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/taski_frontend:latest

  deploy_to_production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy backend
        env:
          SSH_HOST: ${{ secrets.PRODUCTION_HOST }}
          SSH_USER: ${{ secrets.PRODUCTION_USER }}
        run: |
          ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST "
            # Pull latest images
            docker pull ${{ secrets.DOCKER_USERNAME }}/taski_backend:latest
            docker pull ${{ secrets.DOCKER_USERNAME }}/taski_frontend:latest

            cd /opt/taski
            docker-compose down --remove-orphans
            docker-compose up -d --build

            docker-compose exec backend python manage.py migrate --noinput

            docker system prune -af
          "

      - name: Verify deployment
        env:
          SSH_HOST: ${{ secrets.PRODUCTION_HOST }}
          SSH_USER: ${{ secrets.PRODUCTION_USER }}
        run: |
          ssh $SSH_USER@$SSH_HOST "

            docker ps

            curl -s http://localhost:8000/health/
          "

  notify_status:
    name: Notification
    runs-on: ubuntu-latest
    needs: deploy_to_production
    if: always()
    steps:
      - name: Slack notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_COLOR: ${{ job.status == 'success' && 'good' || 'danger' }}
          SLACK_TITLE: 'Deployment ${{ job.status }}'
          SLACK_MESSAGE: 'Taski deployment to production ${{ job.status }}'
